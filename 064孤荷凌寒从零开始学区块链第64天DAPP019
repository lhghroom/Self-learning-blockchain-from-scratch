孤荷凌寒自学第150天
区块链064天Dapp019
【主要内容】
今天继续学习实战，做一个真正的依托于智能合约的DAPP。今天继续独立完善一个众筹的合约。共耗时35分钟。
（此外整理作笔记花费了约63分钟）
详细学习过程见文末学习过程屏幕录像。


【web3.js调用合约的同时发起交易的方法】
找到一个web3.js的中文文档——
http://web3.tryblockchain.org/Web3.js-api-refrence.html
仔细研读之，发现其实昨天 的方法：
```
cc.donate(message,function(err, res){
}
```
也并不错。
也发现可以：
```
cc.donate.sendTransaction(message,function(err, res){
}
```
效果也是一样的。
然而，发现的问题是，每次每一次参与众筹就是成功的（注意：我今天才回忆起来，之前使用回退函数的时候也是一样一样的），而第二次以后再参与众筹就铁定失败。
到今天学习的最后，才终于让我茅塞顿开，大拍脑袋，这个现象没有引起我非常敏感的重视，是造成我消耗了大约五天时间在此纠结的原因，当然在这个纠结的过程中，知识得到扩展，学到了很多相关的知识，不过那些珍贵的时间就因为自己的不够仔细而白白浪费了。

【我找到造成我这好多天纠结不前的失误之处】
在智能合约中——
```
    constructor() public{
        owner = msg.sender;
        goal = 50000000;
        endtime = now + 100800;
        //变量 now 将返回当前的unix时间戳（自1970年1月1日以来经过的秒数）。
        //来自博文：https://www.jianshu.com/p/4b8e943ce7f2
    }

```
上面是初始化建构的代码，注意我设置的goal数量，单位是：wei
然后是接受众筹的代码——
```
    function donate(){
        require(now < endtime,"");
        //require(total < goal,"");
        uint a = msg.value;
        require(a > 0,"");
        //assert(gift[msg.sender]>=0);
        //每个节点至少捐赠大于0个eth
        if(gift[msg.sender]==0){ //判断此节点是否之前已经捐过款项
            giftcount+=1; //统计已经有多少节点参与捐助，而且要去重节点。
            alladd[alladd.length++] = msg.sender; //在地址数组中记录下当前地址,
            alladd.push(msg.sender);
        }
        gift[msg.sender] += a;
        total += a;
        
    }

```
因为一个节点参与众筹之后，金额就已经超过了goal指定的量，所以后续因为：
require(total < goal,"")
的原因，肯定是没有办法继续让别的节点参与众筹了。
而智能合约在这个函数中又不返回任何错误信息，这就造成根本上的问题，不知道错在哪儿！！

【最终修改完成的html页面】
```
<!DOCTYPE html>
<html>
<head>
    <meta charset="UTF-8">
    <title>我要众筹</title>
    <script language="javascript" type="text/javascript" src="jquery.min.js"></script>
    <script language="javascript" type="text/javascript" src="web3.min.js"></script>
    <!-- 1. Include cryptozombies_abi.js here -->
    <script language="javascript" type="text/javascript" src="zongchou_abi.js"></script>

    <script>
// 格式化日期，如月、日、时、分、秒保证为2位数
function formatNumber (n) {
    n = n.toString()
    return n[1] ? n : '0' + n;
}
// 参数number为毫秒时间戳，format为需要转换成的日期格式
function formatTime (number, format) {
    let time = new Date(number)
    let newArr = []
    let formatArr = ['Y', 'M', 'D', 'h', 'm', 's']
    newArr.push(time.getFullYear())
    newArr.push(formatNumber(time.getMonth() + 1))
    newArr.push(formatNumber(time.getDate()))

    newArr.push(formatNumber(time.getHours()))
    newArr.push(formatNumber(time.getMinutes()))
    newArr.push(formatNumber(time.getSeconds()))

    for (let i in newArr) {
        format = format.replace(formatArr[i], newArr[i])
    }
    return format;
}

            //声明一些钱包地址：
            //下面一行定义的是部署合约的节点（创世节点）的信息，公钥
            var wallet_address="0x5227C3EF48B5A1bcF784593e46D9579D26a3b592"; //狐狸钱包的公钥，就是钱包地址，是eth网络上的一个节点。
            //下面一行定义的是节点2的信息
            var w2add="0xe2d6c2f289c53B5aEA44C47293Ba179a3bfa21f0"; //公钥
    
            //下面一行定义的是节点3 的信息
            var w3add="0xb40599fB0366DCf0ffe86677b005b3f20Dfa29aE"; //公钥
    
            //下面一行定义的是节点4 的信息
            var w4add="0x70c8461366d5368B1E79CBFc2Acf4ba56C745977"; //公钥
    
    
   
            // 2. Start code here
            var cc;
            var web3;

            var heyueAddress = "0x39e6e2c0e1fa1b0b1dc423c09bcb75646c13b7fe"; //要连接的合约地址

            function startApp() {
                try {
                    var ccc=web3.eth.contract(zongchouABI);
                    cc=ccc.at(heyueAddress); //https://www.cnblogs.com/tinyxiong/p/9046626.html
                    //cc =new web3.eth.contract(cryptozombiesABI, cryptoZombiesAddress); //如果是另一个版本可能还得加上new关键字。
                    alert("连接上合约！")
                    alert(typeof cc);
                    web3.eth.getAccounts(function (err, accounts) {
                            if (accounts.length == 0) {
                                alert("请检查钱包是否解锁");
                            }else{
                                alert("获取的默认钱包地址：" + web3.eth.defaultAccount);
                            }
                        });
    
                } catch (err) {
                    alert(err);
                }
                alert("加载成功");
                
            }
    
            //async () => 

        //现在这种通过we3.min.js来加载钱包连接的方法，在metamask钱包和麦子钱包中都测试通过。
        window.addEventListener('load',function() {
        try{
            if (typeof web3 !== 'undefined') {
                web3 = new Web3(web3.currentProvider);
                startApp();
            } else {
                //$('#app_loading').hide();
                //alert(jQuery.i18n.prop('lrn_error_alert'));
                //mathWallet.closePage();
                alert("这儿没有钱包环境。");
            }

        }catch(err){
            alert(err);
        }
        });

    
            //----------------下面是自定义的与合约交互的函数-------------------------
            //--查询总金额---
            function gettotal(){
                try{
                    cc.getTotal(function(error, result){  //https://www.jianshu.com/p/15ff9da4dd8d
                    if(!error)
                    {
                        var fln=result / (10**18);
                        $("#total").html("已获得众筹总金额：" + fln + " ether");
                       //alert(result);
                    }
                    else{
                        //alert(error);
                        $("#total").html('获取出错：' + error);
                    }});
                    //return "ok"
                    $("#total").html('正在获取。。。');
                }catch(err){
                    $("#total").html('出错 ：' + err);
                }
            }

            //--查询总金额---
            function gettotal2(){
                try{
                    cc.getContractBalance(function(error, result){  //https://www.jianshu.com/p/15ff9da4dd8d
                    if(!error)
                    {
                        var fln=result / (10**18);

                        $("#total2").html("合约地址代币余额：" + fln + " ether");
                       //alert(result);
                    }
                    else{
                        //alert(error);
                        $("#total2").html('获取出错：' + error);
                    }});
                    //return "ok"
                    $("#total2").html('正在获取。。。');
                }catch(err){
                    $("#total2").html('出错 ：' + err);
                }
            }
    

            //查询本次授权的结束日期和时间
            function getEndTimeStamp(){
                try{
                    cc.getEndTimeStamp(function(error, result){  //https://www.jianshu.com/p/15ff9da4dd8d
                        if(!error)
                    {
                        t=formatTime(result * 1000,"Y-M-D h:m:s");
                        $("#endtime").html("本次众筹截止时间：" + t);
                       //alert(result);
                    }
                    else{
                        //alert(error);
                        $("#endtime").html('获取出错：' + error);
                    }});
                    //return "ok"
                    $("#endtime").html('正在获取。。。');
                }catch(err){
                    alert("使用授权代币转移时出错 ：" + err)
                    return err;
                }
            }

            //参与众筹---
            function dodate(intvalue){
                try{
                    web3.eth.getTransactionCount(web3.eth.defaultAccount,function(err,res){
                        if(!err){
                            alert(res);
                            var message = {to:heyueAddress,value:web3.toWei(intvalue,'ether'),'chainId': 3,'gas': 140000,'gasPrice': web3.toWei('40', 'gwei'),'nonce': res};
                            //cc.donate(message,function(err, res){ //使用这行所示方法，交易可以发起，但无法成功完成
                            //使用下一行的方法，执行成功
                            cc.donate.sendTransaction(message,function(err, res){
                                var output = "";
                                if (!err) {
                                    output += res;
                                } else {
                                    output = err;
                                }
                                document.getElementById('doback').innerHTML = "返回信息：Transaction response= " + output + "<br />";
                            });
                            return "ok";
                        }else{
                            alert(err);
                        }
                    }); 
                }catch(err){
                    alert('执行参与众筹出错：' + err);
                    document.getElementById('doback').innerHTML = "执行失败：Transaction response= " + output + "<br />";
                    return err;
                }
            }



            //--------------------------调用测试---------------------------------------
            //--查询total
            function cmdone_click(){
                try{
                    gettotal();
                }catch(err){
                    alert(err);
                }
            }

            //--查询total2
            function cmdone2_click(){
                try{
                    gettotal2();
                }catch(err){
                    alert(err);
                }
            }
    
            //--查询本次众筹的结束日期和时间----
            function cmdtwo_click(){
                try{
                    getEndTimeStamp();
                }catch(err){
                    alert(err);
                }
            }

            //--参与众筹-------------
            function cmddo_click(){
                try{
                    var strls=document.getElementById("txtvalue").value;
                    //alert(strls);
                    if(/^[0-9]+\.?[0-9]+?$/.test(strls)){
                        var fls=parseFloat(strls);
                        //var intls=fls * (10**18);
                        k=dodate(fls);
                    }else{
                        alert('只能输入数字');
                    }
                }catch(err){
                    alert("操作失败：" + err);
                }
            }



    
        </script>
        
</head>
<body>
    <div>
        <input type="button" value="查询当前众筹总金额" id="cmdone" name="cmdone" onclick="cmdone_click();" />
        <span id="total" name="total"></span>
        <br /><br />
        <input type="button" value="查询当前众筹总金额" id="cmdone2" name="cmdone2" onclick="cmdone2_click();" />
        <span id="total2" name="total2"></span>
        <br /><br />
        <input type="button" value="查询此众筹的截止日期和时间" id="cmdtwo" name="cmdtwo" onclick="cmdtwo_click();" />
        <span id="endtime" name="endtime"></span>
        <br /><br />
        <input type="button" value="我要入筹" id="cmddo" name="cmddo" onclick="cmddo_click();" />
        <input type="text" value="0.001" id="txtvalue" name="txtvalue" />eth
        <br />
        <span id="doback" name="doback"></span>
        <br /><br />


    </div>
    
</body>
</html>
```


github: https://github.com/lhghroom/Self-learning-blockchain-from-scratch 
原文地址：https://www.941xue.com/content.aspx?id=1616 
【欢迎大家加入[就是要学]社群】
如今，这个世界的变化与科技的发展就像一个机器猛兽，它跑得越来越快，跑得越来越快，在我们身后追赶着我们。
很多人很早就放弃了成长，也就放弃了继续奔跑，多数人保持终身不变的样子，原地不动，成为那猛兽的肚中餐——当然那也不错，在猛兽的逼迫下，机械的重复着自我感觉还良好地稳定工作与生活——而且多半感觉不到这有什么不正常的地方，因为在猛兽肚子里的是大多数人，就好像大多数人都在一个大坑里，也就感觉不出来这是一个大坑了，反而坑外的世界显得有些不大正常。
为什么我们不要做坑里的大多数人？
因为真正的人生，应当有百万种可能 ；因为真正的一生可以有好多辈子组成，每一辈子都可以做自己喜欢的事情；因为真正的人生，应当有无数种可以选择的权利，而不是总觉得自己别无选择。因为我们要成为一九法则中为数不多的那个一；因为我们要成为自己人生的导演而不是被迫成为别人安排的戏目中的演员。
【请注意】
就是要学社群并不会告诉你怎样一夜暴富！也不会告诉你怎样不经努力就实现梦想！
【请注意】
就是要学社群并没有任何可以应付未来一切变化的独门绝技，也没有值得吹嘘的所谓价值连城的成功学方法论！
【请注意】
社群只会互相帮助，让每个人都看清自己在哪儿，自己是怎样的，重新看见心中的梦想，唤醒各自内心中的那个英雄，然后勇往直前，成为自己想要成为的样子！
期待与你并肩奔赴未来！
www.941xue.com 
QQ群：646854445 （【就是要学】终身成长）
 


【同步语音笔记】
https://www.ximalaya.com/keji/19103006/337896849 

【学习过程屏幕录屏】
https://www.bilibili.com/video/BV1AZ4y1u76m/ 

