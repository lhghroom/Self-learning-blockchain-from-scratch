孤荷凌寒自学第0232天
区块链学习第146天
NFT043继续自己的NFT合约与前端
（文末有具体的学习过程录屏视频地址等）


笔记合集在github上:
 https://github.com/lhghroom/Self-learning-blockchain-from-scratch 

【主要内容】
今天继续修改完善智能合约代码与前端代码，共耗时36分钟。
（此外整理作笔记花费了约28分钟）
详细学习过程见文末学习过程屏幕录像。

【第一次尝试在js代码中对获取 到的的NFT资产ID列表中的ID逐一再次与合约交互以取出NFT资产的具体内容，成功】
主要的js函数：
```
        //0.1----获取已经被注销的资产ID及内容--------------
        function getAllDestroyNft(){
            try {
                    cc.getdestroyid(function(error, result){
                    if(!error)
                    {
                        if(result.length>0){
                            var intc =result.length;
                            var i=0;
                            var strls="";
                            var intls="";
                            document.getElementById("canrecoverynftlst").innerHTML="<ul>";
                            for(i=0;i<intc;i++){
                                strls=result[i];
                                if(isNumber(strls)==true){
                                    intls=parseInt(strls);
                                    document.getElementById("canrecoverynftlst").innerHTML=document.getElementById("canrecoverynftlst").innerHTML + '<li style="cursor:pointer;" onclick="selDestroyNft(' + strls + ');">';
                                    document.getElementById("canrecoverynftlst").innerHTML=document.getElementById("canrecoverynftlst").innerHTML + '<span style="cursor:pointer;" onclick="selDestroyNft(' + strls + ');">';
                                    document.getElementById("canrecoverynftlst").innerHTML=document.getElementById("canrecoverynftlst").innerHTML + "资产ID：" + strls;
                                    document.getElementById("canrecoverynftlst").innerHTML=document.getElementById("canrecoverynftlst").innerHTML + "</span>";
                                    document.getElementById("canrecoverynftlst").innerHTML=document.getElementById("canrecoverynftlst").innerHTML + '<span style="cursor:pointer;" onclick="selDestroyNft(' + strls + ');">【内容】';
                                    cc.tokenMetadata(intls,function(err, r){
                                        document.getElementById("canrecoverynftlst").innerHTML=document.getElementById("canrecoverynftlst").innerHTML + r;

                                    });
                                    document.getElementById("canrecoverynftlst").innerHTML=document.getElementById("canrecoverynftlst").innerHTML + "</span>";
                                    document.getElementById("canrecoverynftlst").innerHTML=document.getElementById("canrecoverynftlst").innerHTML + "</li>";
                                }

                                

                            }
                            document.getElementById("canrecoverynftlst").innerHTML=document.getElementById("canrecoverynftlst").innerHTML + "</ul>";
                        }else{
                            document.getElementById("canrecoverynftlst").innerHTML = "现在还没有被注销掉的资产。";
                        }
                    }
                    else{
                        //alert(error);
                        document.getElementById("canrecoverynftlst").innerHTML = "获取出错：" + error;
                    }});
                    //return "ok"
                    document.getElementById("canrecoverynftlst").innerHTML = '正在获取。。。';

            } catch (err) {
                document.getElementById("canrecoverynftlst").innerHTML = '尝试获取已注销资产时出错 ：' + err;
            }
        }
        //--上一个函数的子函数，用于自动获得每一个NFT对应的DAT内容。
        
        ///---供上一个函数调用的函数------
        function selDestroyNft(intid){
            try {
                document.getElementById("idforrecover").value=intid;
            } catch (error) {
                
            }
        }

```
最终修改完成的前端js代码;
```
function isNumber(val) { //https://www.cnblogs.com/wangyunhui/p/8981813.html
    var regPos = /^\d+(\.\d+)?$/; //非负浮点数
    var regNeg = /^(-(([0-9]+\.[0-9]*[1-9][0-9]*)|([0-9]*[1-9][0-9]*\.[0-9]+)|([0-9]*[1-9][0-9]*)))$/; //负浮点数
    if(regPos.test(val) || regNeg.test(val)) {
        return true;
        } else {
        return false;
        }
    }

//获取指定id的select标签选中value或text
function getAselectValueOrText(strid,isvalue){
    try {
        var obj=document.getElementById(strid);
        var intindex=obj.selectedIndex;
        if(isvalue==true){
            return obj.options[intindex].value;
        }else{
            return obj.options[intindex].text;
        }
    } catch (error) {
        return "";
    }
}
//得到bool类型的值   https://blog.csdn.net/asdfgh0077/article/details/103365856 第七楼
function parseBool(value) {
    if (typeof value === "boolean") return value;
 
    if (typeof value === "number") {
        return value === 1 ? true : value === 0 ? false : undefined;
    }
 
    if (typeof value != "string") return undefined;
 
    return value.toLowerCase() === 'true' ? true : false;
}

// 格式化日期，如月、日、时、分、秒保证为2位数
function formatNumber (n) {
    n = n.toString()
    return n[1] ? n : '0' + n;
}
// 参数number为毫秒时间戳，format为需要转换成的日期格式
function formatTime (number, format) {
    let time = new Date(number)
    let newArr = []
    let formatArr = ['Y', 'M', 'D', 'h', 'm', 's']
    newArr.push(time.getFullYear())
    newArr.push(formatNumber(time.getMonth() + 1))
    newArr.push(formatNumber(time.getDate()))

    newArr.push(formatNumber(time.getHours()))
    newArr.push(formatNumber(time.getMinutes()))
    newArr.push(formatNumber(time.getSeconds()))

    for (let i in newArr) {
        format = format.replace(formatArr[i], newArr[i])
    }
    return format;
}

            //声明一些钱包地址：
            //下面一行定义的是部署合约的节点（创世节点）的信息，公钥
            var wallet_address="0x5227C3EF48B5A1bcF784593e46D9579D26a3b592"; //狐狸钱包的公钥，就是钱包地址，是eth网络上的一个节点。
            //下面一行定义的是节点2的信息
            var w2add="0xe2d6c2f289c53B5aEA44C47293Ba179a3bfa21f0"; //公钥
    
            //下面一行定义的是节点3 的信息
            var w3add="0xb40599fB0366DCf0ffe86677b005b3f20Dfa29aE"; //公钥
    
            //下面一行定义的是节点4 的信息
            var w4add="0x70c8461366d5368B1E79CBFc2Acf4ba56C745977"; //公钥
    
    
   
            // 2. Start code here
            var cc;
            var web3;
            //----下面是StandardAssetRegistryTest的合约地址
            var heyueAddress='0x4896caDbd8633661ca988f9cb0b21d4b5C5Ea79b';

            function startApp() {
                try {
                    $("#contractaddress").html(heyueAddress);
                    var ccc=web3.eth.contract(nftABI);
                    cc=ccc.at(heyueAddress); //https://www.cnblogs.com/tinyxiong/p/9046626.html
                    //cc =new web3.eth.contract(cryptozombiesABI, cryptoZombiesAddress); //如果是另一个版本可能还得加上new关键字。
                    $("#firstinfo").html("连接上合约！")
                    //alert(typeof cc);
                    web3.eth.getAccounts(function (err, accounts) {
                            if (accounts.length == 0) {
                                $("#firstinfo").html("请检查钱包是否解锁");
                            }else{
                                $("#accountsinfo").html("获取的默认钱包地址：" + web3.eth.defaultAccount);
                                //getCurGift();
                            }
                        });
                    //---执行其它初始化操作-------
                    //----尝试读取已被注销的资产----
                    getAllDestroyNft();
                    
                    //----尝试读取已在出售的资产（这个可以放到专门的页面去执行）

                } catch (err) {
                    alert(err);
                }
                $("#firstinfo").html("加载成功");
                
            }
    
            //async () => 

        //现在这种通过we3.min.js来加载钱包连接的方法，在metamask钱包和麦子钱包中都测试通过。
        window.addEventListener('load',function() {
        try{
            if (typeof web3 !== 'undefined') {
                web3 = new Web3(web3.currentProvider);
                startApp();
            } else {
                //$('#app_loading').hide();
                //alert(jQuery.i18n.prop('lrn_error_alert'));
                //mathWallet.closePage();
                alert("这儿没有钱包环境。");
            }

        }catch(err){
            alert(err);
        }
        });

        //===========================================================================================
    
            //----------------下面是自定义的与合约交互的函数-------------------------
        //0.1----获取已经被注销的资产ID及内容--------------
        function getAllDestroyNft(){
            try {
                    cc.getdestroyid(function(error, result){
                    if(!error)
                    {
                        if(result.length>0){
                            var intc =result.length;
                            var i=0;
                            var strls="";
                            var intls="";
                            document.getElementById("canrecoverynftlst").innerHTML="<ul>";
                            for(i=0;i<intc;i++){
                                strls=result[i];
                                if(isNumber(strls)==true){
                                    intls=parseInt(strls);
                                    document.getElementById("canrecoverynftlst").innerHTML=document.getElementById("canrecoverynftlst").innerHTML + '<li style="cursor:pointer;" onclick="selDestroyNft(' + strls + ');">';
                                    document.getElementById("canrecoverynftlst").innerHTML=document.getElementById("canrecoverynftlst").innerHTML + '<span style="cursor:pointer;" onclick="selDestroyNft(' + strls + ');">';
                                    document.getElementById("canrecoverynftlst").innerHTML=document.getElementById("canrecoverynftlst").innerHTML + "资产ID：" + strls;
                                    document.getElementById("canrecoverynftlst").innerHTML=document.getElementById("canrecoverynftlst").innerHTML + "</span>";
                                    document.getElementById("canrecoverynftlst").innerHTML=document.getElementById("canrecoverynftlst").innerHTML + '<span style="cursor:pointer;" onclick="selDestroyNft(' + strls + ');">【内容】';
                                    cc.tokenMetadata(intls,function(err, r){
                                        document.getElementById("canrecoverynftlst").innerHTML=document.getElementById("canrecoverynftlst").innerHTML + r;

                                    });
                                    document.getElementById("canrecoverynftlst").innerHTML=document.getElementById("canrecoverynftlst").innerHTML + "</span>";
                                    document.getElementById("canrecoverynftlst").innerHTML=document.getElementById("canrecoverynftlst").innerHTML + "</li>";
                                }

                                

                            }
                            document.getElementById("canrecoverynftlst").innerHTML=document.getElementById("canrecoverynftlst").innerHTML + "</ul>";
                        }else{
                            document.getElementById("canrecoverynftlst").innerHTML = "现在还没有被注销掉的资产。";
                        }
                    }
                    else{
                        //alert(error);
                        document.getElementById("canrecoverynftlst").innerHTML = "获取出错：" + error;
                    }});
                    //return "ok"
                    document.getElementById("canrecoverynftlst").innerHTML = '正在获取。。。';

            } catch (err) {
                document.getElementById("canrecoverynftlst").innerHTML = '尝试获取已注销资产时出错 ：' + err;
            }
        }
        //--上一个函数的子函数，用于自动获得每一个NFT对应的DAT内容。
        
        ///---供上一个函数调用的函数------
        function selDestroyNft(intid){
            try {
                document.getElementById("idforrecover").value=intid;
            } catch (error) {
                
            }
        }

           //1--查询指定节点的NFT资产数量-----
        function cmdone_click(){
            try{
                querryaddressbalance();
            }catch(err){
                alert(err);
            }
        }
        //--查询指定节点的资产余额---
            function querryaddressbalance(){
                try{
                    var a=document.getElementById("txtaddressforone").value;
                    if(a!=""){
                        cc.balanceOf(a,function(error, result){
                        if(!error)
                        {
                            //var da=result[0];
                            //var xi=result[1];
                            //var intda=da / (10**18);
                            //var intxi=xi / (10**18); 
                            $("#total").html("当前地址拥有：" + result + "个资产");
                            //alert(result);
                        }
                        else{
                            //alert(error);
                            $("#total").html('获取出错：' + error);
                        }});
                        //return "ok"
                        $("#total").html('正在获取。。。');
                    }else{
                        alert("请先填写正确的节点地址。");
                    }

                }catch(err){
                    $("#total").html('出错 ：' + err);
                }
            }
            //---------------------------------------------------------
            //--查询指定ID的NFT资产是否存在---
                    function cmdone2_click(){
                        try{
                            var strid=document.getElementById("txtnftidfortwo").value;
                            if(isNumber(strid)==true){
                                var nid=parseInt(strid);
                                isnftexist(nid);                                
                            }
 
                        }catch(err){
                            alert(err);
                        }
                    }
            
            function isnftexist(intid){
                try{
                    cc.exists(intid,function(error, result){
                    
                    //alert(result);
                    //alert(result.toString + "---"); //如果这样写toString那么就返回一个函数对象而不是字符串，要加括号！

                    if(!error)
                    {
                        var strls=result.toString();
                        //alert(strls);
                        if(strls.search("true")>=0){
                            $("#total2").html("id为" + intid + "的nft资产存在。");
                        }else{
                            $("#total2").html("id为" + intid + "的nft资产不存在。");
                        }

                    }
                    else{
                        //alert(error);
                        $("#total2").html('获取出错：' + error);
                    }});
                    //return "ok"
                    $("#total2").html('正在获取。。。');
                }catch(err){
                    $("#total2").html('出错 ：' + err);
                }
            }
//------------------------------------------------------------------------------------    
        //2查询指定ID的NFT资产已授权给哪个节点地址
        function cmdtwo_click(){
            try{
                var strid=document.getElementById("txtnftidfortwo2").value;
                if(isNumber(strid)==true){
                    var nid=parseInt(strid);
                    getApproved(nid);                                
                }                
            }catch(err){
                alert(err);
            }
        }

            //查询指定ID的NFT资产已授权给哪个节点地址
            function getApproved(intid){
                try{
                    cc.getApproved(intid,function(error, result){
                    //alert(result);
                    if(!error)
                    {
                        var strls=result.toString();
                        if(strls.search("0x0000000000000000000000000000000000000000")>=0){
                            document.getElementById("spanapprove").innerText="此资产并没有授权给任何节点";
                        }else{
                            document.getElementById("spanapprove").innerText="此资产已授权给：" + result;
                        }
                    }
                    else{
                        //alert(error);
                        document.getElementById("spanapprove").innerText='获取出错：' + error;
                    }});
                    //return "ok"
                    document.getElementById("spanapprove").innerText='正在获取。。。';
                }catch(err){
                    alert("使用授权代币转移时出错 ：" + err)
                    return err;
                }
            }

//----------------------------------------------------------------------------------------
            //3--查询一个节点是不是向另一个节点授权了所有资产的操作权-----------------
            function cmdthree_click(){
                try{
                    var strholder=document.getElementById("txtaddressforthreeholder").value;
                    var stroperator=document.getElementById("txtaddressforthreeoperator").value;
                    //alert(strholder);
                    //alert(stroperator);
                    if(strholder!="" && stroperator!=""){
                        isApprovedForAll(strholder,stroperator);
                    }else{
                        alert("请先输入两个节点的地址。");
                    }
                }catch(err){
                    alert(err);
                }
            }

            function isApprovedForAll(strholder,stroperator){
                try{
                    //alert(strholder);
                    //alert(stroperator);
                    cc.isApprovedForAll(strholder,stroperator,function(error, result){
                    if(!error)
                    {
                        var strls=result.toString();
                        //alert(strls);
                        if(strls.search("true")>=0){
                            document.getElementById("allapproveaddress").innerText='授权关系存在。';
                        }else{
                            document.getElementById("allapproveaddress").innerText='授权关系不存在。';
                        }

                    }
                    else{
                        //alert(error);
                        document.getElementById("allapproveaddress").innerText='获取出错：' + error;
                    }});
                    //return "ok"
                    document.getElementById("allapproveaddress").innerText='获取中.....';
                }catch(err){
                    alert("查询出错：" + err)
                    return err;
                }
            }

//------------------------------------------------------------------------------------------------------
           //4--查询指定的address是否已经拥有了对指定ID的NFT资产的控制权
           function cmdfoure_click(){
                try{
                    var strid=document.getElementById("txtnftforfoure").value;
                    var straddress=document.getElementById("txtaddressforfoure").value;
                    if(isNumber(strid)==true){
                        var nid=parseInt(strid);
                        isAuthorized(straddress,nid);                                
                    }                                    
                }catch(err){
                    alert(err);
                }
            }

            function isAuthorized(straddress,intid){
                try {
                    cc.isAuthorized(straddress,intid,function(error, result){
                    if(!error)
                    {
                        var strls=result.toString();
                        //alert(strls);
                        if(strls.search("true")>=0){
                            document.getElementById("spanforfoure").innerText='授权关系存在。';
                        }else{
                            document.getElementById("spanforfoure").innerText='授权关系不存在。';
                        }

                    }
                    else{
                        //alert(error);
                        $("#spanforfoure").html('获取出错：' + error);
                    }});
                    //return "ok"
                    $("#spanforfoure").html('正在获取。。。');
                } catch (error) {
                    alert("在查询指定节点是否拥有对指定资产的控制权时出错：" + error)
                }
            }
//----------------------------------------------------------------------------------------
           //5--查询指定节点的NFT资产数量-----
           function cmdfive_click(){
            try{
                isContractProxy();
            }catch(err){
                alert(err);
            }
        }
        //--查询指定节点的资产余额---
            function isContractProxy(){
                try{
                    var a=document.getElementById("txtaddressforfive").value;
                    if(a!=""){
                        cc.isContractProxy(a,function(error, result){
                        if(!error)
                        {
                            var strls=result.toString();
                            //alert(strls);
                            if(strls.search("true")>=0){
                                document.getElementById("spanforfive").innerText='这是一个合约地址。';
                            }else{
                                document.getElementById("spanforfive").innerText='这是一个普通地址。';
                            }
    
    
                        }
                        else{
                            //alert(error);
                            document.getElementById("spanforfive").innerText='获取出错：' + error;
                        }});
                        //return "ok"
                        $("#spanforfive").html('正在获取。。。');
                    }else{
                        alert("请先填写正确的节点地址。");
                    }

                }catch(err){
                    $("#spanforfive").html('出错 ：' + err);
                }
            }
//---------------------------------------------------------------------------------------------------
        //6---查询一个指定ID的NFT资产是属于哪个节点的========
        function cmdsix_click(){
            try{
                var strid=document.getElementById("txtnftidforsix").value;
                if(isNumber(strid)==true){
                    var nid=parseInt(strid);
                    ownerOf(nid);                                
                }                
            }catch(err){
                alert(err);
            }
        }

        function ownerOf(intid){
            try{
                cc.ownerOf(intid,function(error, result){
                //alert(result);
                if(!error)
                {
                    var strls=result.toString();
                    if(strls.search("0x0000000000000000000000000000000000000000")>=0){
                        document.getElementById("spanforsix").innerText="此资产不属于任何节点";
                    }else{
                        document.getElementById("spanforsix").innerText="此资产属于：" + result;
                    }
                }
                else{
                    //alert(error);
                    document.getElementById("spanforsix").innerText='获取出错：' + error;
                }});
                //return "ok"
                document.getElementById("spanforsix").innerText='正在获取。。。';
            }catch(err){
                alert("查询出错 ：" + err)
                return err;
            }
        }

//---------------------------------------------------------------------------------------------------
        //7---查询一个指定ID的NFT资产具体数据，如URL或组成数据代码等========
        function cmdseven_click(){
            try{
                var strid=document.getElementById("txtnftidforseven").value;
                if(isNumber(strid)==true){
                    var nid=parseInt(strid);
                    tokenMetadata(nid);                                
                }                
            }catch(err){
                alert(err);
            }
        }

        function tokenMetadata(intid){
            try{
                cc.tokenMetadata(intid,function(error, result){
                //alert(result);
                if(!error)
                {

                    document.getElementById("spanforseven").innerText=result;
                }
                else{
                    //alert(error);
                    document.getElementById("spanforseven").innerText='获取出错：' + error;
                }});
                //return "ok"
                document.getElementById("spanforseven").innerText='正在获取。。。';
            }catch(err){
                alert("查询出错 ：" + err)
                return err;
            }
        }

//----------------------------------------------------------------------------------------
           //8--查询指定ID的NFT资产在指定ADDRESS用户资产库的index值
           function cmdeight_click(){
            try{
                var strid=document.getElementById("txtnftforeight").value;
                var straddress=document.getElementById("txtaddressforeight").value;
                if(isNumber(strid)==true){
                    var nid=parseInt(strid);
                    tokenOfOwnerByIndex(straddress,nid);                                
                }                                    
            }catch(err){
                alert(err);
            }
        }

        function tokenOfOwnerByIndex(straddress,intid){
            try {
                cc.tokenOfOwnerByIndex(straddress,intid,function(error, result){
                if(!error)
                {
                    var strls=result.toString();
                    if(strls=="0"){
                        document.getElementById("spanforeight").innerText="你没有这个资产，你的资产只有" + intid + "个"
                    }else{
                        document.getElementById("spanforeight").innerText='id:' + result;
                    }


                }
                else{
                    //alert(error);
                    $("#spanforeight").html('获取出错：' + error);
                }});
                //return "ok"
                $("#spanforeight").html('正在获取。。。');
            } catch (error) {
                alert("在查询指定节点是否拥有对指定资产的控制权时出错：" + error)
            }
        }

//----------------------------------------------------------------------------------------------
           //9--查询指定节点的NFT资产列表-----
           function cmdnine_click(){
            try{
                tokensOf();
            }catch(err){
                alert(err);
            }
        }
        //--查询指定节点的资产列表---
            function tokensOf(){
                try{
                    var a=document.getElementById("txtaddressfornine").value;
                    if(a!=""){
                        cc.tokensOf(a,function(error, result){
                        if(!error)
                        {
                            if(result.length>0){
                                var strls="此节点拥有以下ID的资产：\n";
                                for(var i=0;i<result.length;i++){
                                    strls=strls + result[i] + "\n";
                                    document.getElementById("spanfornine").innerText=strls;
                                }

                            }else{
                                document.getElementById("spanfornine").innerText="此节点没有任何资产";
                            }

                        }
                        else{
                            //alert(error);
                            document.getElementById("spanfornine").innerText=error;
                        }});
                        //return "ok"
                        document.getElementById("spanfornine").innerText="正在查询...";
                    }else{
                        document.getElementById("spanfornine").innerText="请先输入合约地址。";
                    }

                }catch(err){
                    document.getElementById("spanfornine").innerText='出错 ：' + err;
                }
            }

//-----------------------------------------------------------------------------------------------

            //生成资产
            function cmdgenerate_click(){
                var a=""; //要生成资产的地址
                var s=""; //资产的具体数据
                try {
                    a=document.getElementById("addressgenerate").value;
                    s=document.getElementById("datagenerate").value;
                    if(a==""){
                        alert("请先输入要获得资产的节点地址。");
                        return false;
                    }
                    if(s==""){
                        alert("必须指定资产的具体数据");
                        return false;
                    }
                } catch (error) {
                    alert("在生成资产时出错:" + error);
                    return false;
                }
                try{
                    web3.eth.getTransactionCount(web3.eth.defaultAccount,function(err,res){
                        if(!err){
                            //alert(res);web3.toWei(intvalue,'ether')
                            var message = {to:heyueAddress,value:0,'chainId': 3,'gas': 300000,'gasPrice': web3.toWei('40', 'gwei'),'nonce': res};
                            cc.generate(a,s,message,function(err, res){
                                var output = "";
                                if (!err) {
                                    output += res;
                                } else {
                                    output = err;
                                }
                                //----listendonate();
                                document.getElementById('spanforgenerate').innerHTML = "返回信息：Transaction response= " + output + "<br />";
                            });
                            return true;
                        }else{
                            alert(err);
                        }
                    }); 
                    document.getElementById('spanforgenerate').innerHTML = "操作执行中...";
                }catch(err){
                    alert('执行生成资产出错：' + err);
                    document.getElementById('spanforgenerate').innerHTML = "执行失败：Transaction response= " + output + "<br />";
                    return false;
                }
            }
//-----------------------------------------------------------------------------------------
//授权单个资产------
            function cmdapprove_click(){
                var a=""; //要生成资产的地址
                var s=""; //资产的id
                try {
                    a=document.getElementById("addressapprove").value;
                    s=document.getElementById("idapprove").value;
                    if(a==""){
                        alert("请先输入要授权给哪个节点地址。");
                        return false;
                    }
                    if(isNumber(s)==false){
                        alert("要授权给另一个节点操作的资产ID是一个数字");
                        return false;
                    }
                } catch (error) {
                    alert("在资产授权时出错:" + error);
                    return false;
                }
                try{
                    web3.eth.getTransactionCount(web3.eth.defaultAccount,function(err,res){
                        if(!err){
                            //alert(res);web3.toWei(intvalue,'ether')
                            var message = {to:heyueAddress,value:0,'chainId': 3,'gas': 300000,'gasPrice': web3.toWei('40', 'gwei'),'nonce': res};
                            cc.approve(a,s,message,function(err, res){
                                var output = "";
                                if (!err) {
                                    output += res;
                                } else {
                                    output = err;
                                }
                                //----listendonate();
                                document.getElementById('spanforapprove').innerHTML = "返回信息：Transaction response= " + output + "<br />";
                            });
                            return true;
                        }else{
                            alert(err);
                        }
                    }); 
                    document.getElementById('spanforapprove').innerHTML = "操作执行中...";
                }catch(err){
                    alert('执行单个资产授权出错：' + err);
                    document.getElementById('spanforapprove').innerHTML = "执行失败：Transaction response= " + output + "<br />";
                    return false;
                }                
            }
//=------------------------------------------------------------------------------
//----转移资产----------------------
            function cmdtransfer_click(){
                var afrom=""; 
                var ato=""
                var id=""; //资产的id
                var databytes="";
                try {
                    afrom=web3.eth.defaultAccount;
                    ato=document.getElementById("addressto").value;
                    id=document.getElementById("idtransfer").value;
                    databytes=document.getElementById("databyte").value;
                    if(afrom==""){
                        alert("没有获取到当前钱包地址。");
                        return false;
                    }
                    if(ato==""){
                        alert("请先输入要向哪个地址转入资产。");
                        return false;
                    }                    
                    if(isNumber(id)==false){
                        alert("资产ID必须是一个数字");
                        return false;
                    }
                } catch (error) {
                    alert("在准备转移资产时出错:" + error);
                    return false;
                }

                try{
                    web3.eth.getTransactionCount(web3.eth.defaultAccount,function(err,res){
                        if(!err){
                            //alert(res);web3.toWei(intvalue,'ether')
                            var message = {to:heyueAddress,value:0,'chainId': 3,'gas': 300000,'gasPrice': web3.toWei('40', 'gwei'),'nonce': res};
                            cc.safeTransfer(afrom,ato,id,databytes,message,function(err, res){
                                var output = "";
                                if (!err) {
                                    output += res;
                                } else {
                                    output = err;
                                }
                                //----listendonate();
                                document.getElementById('spanfortransfer').innerHTML = "返回信息：Transaction response= " + output + "<br />";
                            });
                            return true;
                        }else{
                            alert(err);
                        }
                    }); 
                    document.getElementById('spanfortransfer').innerHTML = "操作执行中...";
                }catch(err){
                    alert('执行单个资产转移出错：' + err);
                    document.getElementById('spanfortransfer').innerHTML = "执行失败：Transaction response= " + output + "<br />";
                    return false;
                }  

            }

//------------------------------------------------------------------------------------------
//------把自己的资产全部授权----------------------------
            function cmdapproveall_click(){
                var a=""; //要授权去的地址
                var s=""; //true OR false
                try {
                    a=document.getElementById("addressapproveall").value;
                    s=getAselectValueOrText("selapproveall",true);
                    if(a==""){
                        alert("请先输要授权给哪个节点地址。");
                        return false;
                    }
                    if(s==""){
                        alert("请指明授权还是撤消授权");
                        return false;
                    }
                } catch (error) {
                    alert('执行全部资产授权出错：' + error);
                    return false;
                }                
                try {
                    web3.eth.getTransactionCount(web3.eth.defaultAccount,function(err,res){
                        if(!err){
                            //alert(res);web3.toWei(intvalue,'ether')
                            var message = {to:heyueAddress,value:0,'chainId': 3,'gas': 300000,'gasPrice': web3.toWei('40', 'gwei'),'nonce': res};
                            cc.setApprovalForAll(a,parseBool(s),message,function(err, res){
                                var output = "";
                                if (!err) {
                                    output += res;
                                } else {
                                    output = err;
                                }
                                //----listendonate();
                                document.getElementById('spanforapproveall').innerHTML = "返回信息：Transaction response= " + output + "<br />";
                            });
                            return true;
                        }else{
                            alert(err);
                        }
                    }); 
                    document.getElementById('spanforapproveall').innerHTML = "操作执行中...";                    
                } catch (error) {
                    alert('执行全部资产授权出错：' + err);
               
                    return false;                    
                }
            }


            //监听事件
            function listendonate(){
                try {
                    document.getElementById('donateback').innerText="事件结果监听中......";
                    //------------------------------------------
                    var event=cc.FundTransfer();
                    event.watch(function(error,result){
                        if(!error){
                            var strls="";
                            var strls2="";
                            for(let key in result){
                               strls=strls + key + " : " + result[key] + "; ";
                            }
                            //https://me.tryblockchain.org/blockchain-solidity-event.html
                            try {
                                var fl=0.0;
                                try {
                                    fl=(result.args.amount - 0) / (10 ** 18);
                                } catch (error) {
                                    fl=0.0
                                }
                                var strls3=result.args.amount + "wei";
                                if(fl!=0.0){
                                    strls3=fl.toString + "ether"
                                }
                                strls2="参与众筹金额：" + strls3 + ",得到的代币CI金额" + result.args.backci + "ci.";
                            } catch (error) {
                                strls2="具体事件参数信息未能获取到：" + error;
                            }

                            document.getElementById('donateback').innerHTML=strls + "<br />" + strls2;
                        }else{
                           document.getElementById('donateback').innerText=error;
                        }
                    })

                    /*
                        下面是接收到的返回事件监控信息：
                        address : 0x7a2559f23e056f39e844a465600eb605c4e3aeabblockHash : 0xfab4a6bc95c9aa41fc688e89a87023b124fd581c6bd680226ab08b3d883002ebblockNumber : 6459690logIndex : 1removed : falsetransactionHash : 0xdcd4b44f01fce402ac56ec22be5d6ba479195a48db3ea8082382b4cea81af856transactionIndex : 0event : FundTransferargs : [object Object]
undefined,1000000000000000,100,100000000000000000000,100,100000 

                    */

                    //上面的写法成功，但只能监听当前 一次事件

                    /*
                        注意参照以下代码：
                        instructorEvent.watch(function(error, result) {
                            if (!error)
                                {
                                    $("#info").html(result.args.name + ' (' + result.args.age + ' years old)');
                                } else {
                                    console.log(error);
                                }
                        });
                    */

                    //下面这种写法报错
                    //var myEvent = cc.events.FundTransfer({
                    //    filter: {myIndexedParam: [20,23], myOtherIndexedParam: '0x123456789...'}, // Using an array means OR: e.g. 20 or 23
                    //                fromBlock: 0
                    //                },
                    //    fromBlock: 0
                    //}, function(error, event){})
                    //.on('data', function(event){
                    //    document.getElementById("listenback").innerText=event; // same results as the optional callback above
                    //})
                    //.on('changed', function(event){
                    //        // remove event from local database
                    //})        
                    //.on('error', console.error);

                    
                } catch (error) {
                    document.getElementById('donateback').innerText="监听事件错误：" + error;
                }
            }

            //取回合约地址上多余的ci代币
            function getciback(){
                try {
                    cc.getbackci(function(error, result){
                        if(!error)
                    {
                        
                        $("#getciback").html("操作完成。" + result);
                       //alert(result);
                    }
                    else{
                        //alert(error);
                        $("#getciback").html('操作失败：' + error);
                    }});
                    //return "ok"
                    $("#getciback").html('正在操作。。。');
                } catch (error) {
                    document.getElementById('getciback').innerText="尝试取回合约地址上剩余的ci代币时失败：" + error;
                }
            }

            //取回包括历史事件记录在内的所有记录，当前 函数取回参与众筹的广播事件
            function listenevent(){
                try {
                    //执行下面的语句时，会把getPastEvents当作合约中的函数处理，
                    //但由于合约中根本没有这个函数，所以会报错，
                    //http://cw.hubwiz.com/card/c/web3.js-1.0/1/4/15/
                    var event=cc.FundTransfer();
                    event.watch({filter:{
                        //filter: {myIndexedParam: [20,23], myOtherIndexedParam: '0x123456789...'}, // Using an array means OR: e.g. 20 or 23
                        fromBlock: 0,
                        toBlock: 'latest'
                    }}, function(error, events){
                        document.getElementById("listenback").innerText=events;
                    })
                    //.then(function(events){
                    //    document.getElementById("listenback").innerText=events;// same results as the optional callback above
                    //});

                } catch (error) {
                    document.getElementById("listenback").innerText="监听失败：" + error;
                }
            }

        //执行注销当前节点自己的资产
        function cmddestroy_click(){
            try{
                var strid=document.getElementById("txtnftidfordestroy").value;
                if(isNumber(strid)==true){
                    var nid=parseInt(strid);
                    destroy(nid);                                
                }                
            }catch(err){
                alert(err);
            }
        }

            //注销我自己（当前调用合约节点）的指定id的Nft资产
            function destroy(intid){
                try{
                    web3.eth.getTransactionCount(web3.eth.defaultAccount,function(err,res){
                        if(!err){
                            //alert(res);web3.toWei(intvalue,'ether')
                            var message = {to:heyueAddress,value:0,'chainId': 3,'gas': 300000,'gasPrice': web3.toWei('40', 'gwei'),'nonce': res};
                            cc.destroy(intid,function(err, res){
                                var output = "";
                                if (!err) {
                                    output += res;
                                } else {
                                    output = err;
                                }
                                //----listendonate();
                                document.getElementById('spanfordestroy').innerHTML = "返回信息：Transaction response= " + output + "<br />";
                            });
                            return true;
                        }else{
                            alert(err);
                        }
                    }); 
                    document.getElementById("spanfordestroy").innerText='正在操作中......';
                }catch(err){
                    alert("注销个人资产时出错 ：" + err)
                    return err;
                }
            }
 
 //超级节点（合约的部署节点）恢复已被节点自己注销的NFT资产给任意一个节点
            function cmdrecover_click(){
                var a=""; //地址
                var s=""; //资产的id
                try {
                    a=document.getElementById("addressforrecover").value;
                    s=document.getElementById("idforrecover").value;
                    if(a==""){
                        alert("请先输入要将这个资产授予给哪个节点地址。");
                        return false;
                    }
                    if(isNumber(s)==false){
                        alert("已注销的资产ID是一个数字");
                        return false;
                    }
                } catch (error) {
                    alert("在资产恢复时出错:" + error);
                    return false;
                }
                try{
                    web3.eth.getTransactionCount(web3.eth.defaultAccount,function(err,res){
                        if(!err){
                            //alert(res);web3.toWei(intvalue,'ether')
                            var message = {to:heyueAddress,value:0,'chainId': 3,'gas': 300000,'gasPrice': web3.toWei('40', 'gwei'),'nonce': res};
                            cc.recovery(s,a,message,function(err, res){
                                var output = "";
                                if (!err) {
                                    output += res;
                                } else {
                                    output = err;
                                }
                                //----listendonate();
                                document.getElementById('spanidforrecover').innerHTML = "返回信息：Transaction response= " + output + "<br />";
                            });
                            return true;
                        }else{
                            alert(err);
                        }
                    }); 
                    document.getElementById('spanidforrecover').innerHTML = "操作执行中...";
                }catch(err){
                    alert('执行单个资产恢复时出错：' + err);
                    document.getElementById('spanidforrecover').innerHTML = "执行失败：Transaction response= " + output + "<br />";
                    return false;
                }    
            }
 

 

 

```

github: https://github.com/lhghroom/Self-learning-blockchain-from-scratch 


【欢迎大家加入[就是要学]社群】
如今，这个世界的变化与科技的发展就像一个机器猛兽，它跑得越来越快，跑得越来越快，在我们身后追赶着我们。
很多人很早就放弃了成长，也就放弃了继续奔跑，多数人保持终身不变的样子，原地不动，成为那猛兽的肚中餐——当然那也不错，在猛兽的逼迫下，机械的重复着自我感觉还良好地稳定工作与生活——而且多半感觉不到这有什么不正常的地方，因为在猛兽肚子里的是大多数人，就好像大多数人都在一个大坑里，也就感觉不出来这是一个大坑了，反而坑外的世界显得有些不大正常。
为什么我们不要做坑里的大多数人？
因为真正的人生，应当有百万种可能 ；因为真正的一生可以有好多辈子组成，每一辈子都可以做自己喜欢的事情；因为真正的人生，应当有无数种可以选择的权利，而不是总觉得自己别无选择。因为我们要成为一九法则中为数不多的那个一；因为我们要成为自己人生的导演而不是被迫成为别人安排的戏目中的演员。
【请注意】
就是要学社群并不会告诉你怎样一夜暴富！也不会告诉你怎样不经努力就实现梦想！
【请注意】
就是要学社群并没有任何可以应付未来一切变化的独门绝技，也没有值得吹嘘的所谓价值连城的成功学方法论！
【请注意】
社群只会互相帮助，让每个人都看清自己在哪儿，自己是怎样的，重新看见心中的梦想，唤醒各自内心中的那个英雄，然后勇往直前，成为自己想要成为的样子！
期待与你并肩奔赴未来！

QQ群：646854445 （【就是要学】终身成长）
 


【原文地址】
https://www.941xue.com/content.aspx?k=941XUEUXZKHS19219941449932239118 
【同步语音笔记】
https://www.ximalaya.com/keji/19103006/367125038 

【学习过程屏幕录屏】
https://www.bilibili.com/video/BV1Zt4y1e7tJ/


