孤荷凌寒自学第180天区块链094天Dapp049
【主要内容】
今天继续学习实战，继续完成一个菠菜类的DU大小的智能合约。共耗时34分钟。
（此外整理作笔记花费了约44分钟）
详细学习过程见文末学习过程屏幕录像。

【今天暂没解决开奖成功却没有发放奖金成功的问题】
send()方法与transfer()方法获取eth代币的区别，需要进一步学习。
今天没有进行任何实质研究。

【今天对dudaxiao.html页面的界面部分和Js代码进行了部分改写】
今天最主要的工作就是把dudaxiao.html页面中的一些从原众筹合约中继的html前端页面承而来的一些文字进行了改写，使其更符合本菠菜合约的需要。
完成的代码如下：
```
<!DOCTYPE html>
<html>
<head>
    <meta charset="UTF-8">
    <title>DU da xiao</title>
    <script language="javascript" type="text/javascript" src="jquery.min.js"></script>
    <script language="javascript" type="text/javascript" src="web3.min.js"></script>
    <!-- 1. Include cryptozombies_abi.js here -->
    <script language="javascript" type="text/javascript" src="dudaxiao_abi.js"></script>

    <script>
// 格式化日期，如月、日、时、分、秒保证为2位数
function formatNumber (n) {
    n = n.toString()
    return n[1] ? n : '0' + n;
}
// 参数number为毫秒时间戳，format为需要转换成的日期格式
function formatTime (number, format) {
    let time = new Date(number)
    let newArr = []
    let formatArr = ['Y', 'M', 'D', 'h', 'm', 's']
    newArr.push(time.getFullYear())
    newArr.push(formatNumber(time.getMonth() + 1))
    newArr.push(formatNumber(time.getDate()))

    newArr.push(formatNumber(time.getHours()))
    newArr.push(formatNumber(time.getMinutes()))
    newArr.push(formatNumber(time.getSeconds()))

    for (let i in newArr) {
        format = format.replace(formatArr[i], newArr[i])
    }
    return format;
}

            //声明一些钱包地址：
            //下面一行定义的是部署合约的节点（创世节点）的信息，公钥
            var wallet_address="0x5227C3EF48B5A1bcF784593e46D9579D26a3b592"; //狐狸钱包的公钥，就是钱包地址，是eth网络上的一个节点。
            //下面一行定义的是节点2的信息
            var w2add="0xe2d6c2f289c53B5aEA44C47293Ba179a3bfa21f0"; //公钥
    
            //下面一行定义的是节点3 的信息
            var w3add="0xb40599fB0366DCf0ffe86677b005b3f20Dfa29aE"; //公钥
    
            //下面一行定义的是节点4 的信息
            var w4add="0x70c8461366d5368B1E79CBFc2Acf4ba56C745977"; //公钥
    
    
   
            // 2. Start code here
            var cc;
            var web3;

            //var heyueAddress = "0x833Efb0B28AeD4C6510906fac12Deb60d98D1C23"; //这个合约地址不返回合约代币。要连接的众筹ico合约地址
            //var heyueAddress = "0xC5b33d4ca2Cf2dF9bCeD7491dFa791a9546bEE2c"; //这个合约地址是要返回ci代币的
            //var heyueAddress = "0xa0C369A8E08E5bD17401CC612d453f883cbDed16"; //这个合约是最后发布的ico众筹合约，事件广播完整
            //var heyueAddress = "0x794155739d9E18a0Ca9c133f99b11E467597D4EB"; //这个合约是保证返回的ci最后至少有一个ci
            //var heyueAddress='0xC56E6CcAC9b0fEc59eCbe18059d615690B0d740c';
            //var heyueAddress='0x7a2559F23E056F39e844a465600EB605C4E3AEaB';
            //var heyueAddress='0x673795F0fe831CDf3C09abed911c3933d60B6C66';
            //----下面是赌大小的合约地址
            var heyueAddress='0x5798e6F6081a07ECaBd691Fc4fe50E666BeA577C';

            function startApp() {
                try {
                    $("#contractaddress").html(heyueAddress);
                    var ccc=web3.eth.contract(zongchouABI);
                    cc=ccc.at(heyueAddress); //https://www.cnblogs.com/tinyxiong/p/9046626.html
                    //cc =new web3.eth.contract(cryptozombiesABI, cryptoZombiesAddress); //如果是另一个版本可能还得加上new关键字。
                    $("#firstinfo").html("连接上合约！")
                    //alert(typeof cc);
                    web3.eth.getAccounts(function (err, accounts) {
                            if (accounts.length == 0) {
                                $("#firstinfo").html("请检查钱包是否解锁");
                            }else{
                                $("#accountsinfo").html("获取的默认钱包地址：" + web3.eth.defaultAccount);
                                //getCurGift();
                            }
                        });
    
                } catch (err) {
                    alert(err);
                }
                $("#firstinfo").html("加载成功");
                
            }
    
            //async () => 

        //现在这种通过we3.min.js来加载钱包连接的方法，在metamask钱包和麦子钱包中都测试通过。
        window.addEventListener('load',function() {
        try{
            if (typeof web3 !== 'undefined') {
                web3 = new Web3(web3.currentProvider);
                startApp();
            } else {
                //$('#app_loading').hide();
                //alert(jQuery.i18n.prop('lrn_error_alert'));
                //mathWallet.closePage();
                alert("这儿没有钱包环境。");
            }

        }catch(err){
            alert(err);
        }
        });

    
            //----------------下面是自定义的与合约交互的函数-------------------------
            //--查询押大和押小各自的金额---
            function gettotal(){
                try{
                    cc.allDuZhu(function(error, result){  //https://www.jianshu.com/p/15ff9da4dd8d
                    if(!error)
                    {
                        var da=result[0];
                        var xi=result[1];
                        var intda=da / (10**18);
                        var intxi=xi / (10**18); 
                        $("#total").html("目前押大金额：" + intda + " ether" + "押小金额：" + intxi + "总赌资：" + (intda + intxi));
                       //alert(result);
                    }
                    else{
                        //alert(error);
                        $("#total").html('获取出错：' + error);
                    }});
                    //return "ok"
                    $("#total").html('正在获取。。。');
                }catch(err){
                    $("#total").html('出错 ：' + err);
                }
            }

            //--查询总金额---
            function gettotal2(){
                try{
                    cc.getContractBalance(function(error, result){  //https://www.jianshu.com/p/15ff9da4dd8d
                    if(!error)
                    {
                        var fln=result / (10**18);

                        $("#total2").html("合约地址代币余额：" + fln + " ether");
                       //alert(result);
                    }
                    else{
                        //alert(error);
                        $("#total2").html('获取出错：' + error);
                    }});
                    //return "ok"
                    $("#total2").html('正在获取。。。');
                }catch(err){
                    $("#total2").html('出错 ：' + err);
                }
            }
    

            //查询最后一次开奖记录
            function getEndTimeStamp(){
                try{
                    cc.getKaiJiangInfo(function(error, result){
                        if(!error)
                    {
                        t=formatTime(result[0] * 1000,"Y-M-D h:m:s");
                        var r=result[1];//中奖号码
                        var fpl=result[2]; //赔率
                        $("#endtime").html("最后一次开奖时间：" + t + "开奖号码:" + r + "赔率" + fpl);
                       //alert(result);
                    }
                    else{
                        //alert(error);
                        $("#endtime").html('获取出错：' + error);
                    }});
                    //return "ok"
                    $("#endtime").html('正在获取。。。');
                }catch(err){
                    alert("使用授权代币转移时出错 ：" + err)
                    return err;
                }
            }

            //查询我自己的下注金额
            function myXiaZhuValue(){
                try{
                    cc.myXiaZhuValue(function(error, result){
                    if(!error)
                    {
                        //result本身就是一个数组对象。
                        var da=result[0];
                        var xi=result[1];
                        var intda=da / (10**18);
                        var intxi=xi / (10**18); 
                        $("#alladdress").html("我目前参与押大金额：" + intda + " ether" + "押小金额：" + intxi + "总赌资：" + (intda + intxi));
                       //alert(result);
                       //alert(result);
                    }
                    else{
                        //alert(error);
                        $("#alladdress").html('获取出错：' + error);
                    }});
                    //return "ok"
                    $("#alladdress").html('正在获取。。。');
                }catch(err){
                    alert("查询所有已参与节点时出错：" + err)
                    return err;
                }
            }

            //查询已参与节点的总数---
            function getAddressCount(){
                try{
                    cc.getGiftCount(function(error, result){
                        if(!error)
                    {
                        
                        $("#addresscount").html("参与众筹的节点有" + result + "个");
                       //alert(result);
                    }
                    else{
                        //alert(error);
                        $("#addresscount").html('获取出错：' + error);
                    }});
                    //return "ok"
                    $("#addresscount").html('正在获取。。。');
                }catch(err){
                    alert("查询所有已参与节点总数时出错：" + err)
                    return err;
                }
            }

            //查询所有节点 与参与金额
            function getallgiftandvalue(){
                try {
                    cc.getgift(function(error, result){
                    if(!error)
                    {
                        //result本身就是一个数组对象。
                        //alert(result.length);

                        if(result.length>1){
                            var adds=result[0];
                            var vs=result[1];
                            //alert(adds.length);
                            //alert(vs.length);
                            var strls="";
                            var fln=0.0;
                            for(i=0;i<adds.length;i++){
                                if(i>0){
                                    fln=(vs[i] - 0.0)/(10**18);
                                    strls=strls + "<br />" + adds[i] + " 捐赠:" + fln + "ether;";
                                }
                            }
                            $("#alladdressandvalue").html(strls);
                        }else{
                            $("#alladdressandvalue").html("获取到的结果不完整。")
                        }
                       //alert(result);
                    }
                    else{
                        //alert(error);
                        $("#alladdressandvalue").html('获取出错：' + error);
                    }});
                    //return "ok"
                    $("#alladdressandvalue").html('正在获取。。。');
                } catch (error) {
                    alert("在查询所有参与节点与众筹金额对照关系时出错：" + error)
                }
            }

            //查询指定节点地址的参与众筹金额
            function getAddressGift(a){
                try {
                    cc.getGiftBalanceFrom(a,function(error, result){
                        if(!error)
                    {
                        //alert(result); 
                        var fln=result / (10**18);
                        $("#address").html("此节点共参与众筹：" + fln + "ether");
                       //alert(result);
                    }
                    else{
                        //alert(error);
                        $("#addresscount").html('获取出错：' + error);
                    }});
                    $("address").html('正在获取... ...');
                } catch (error) {
                    alert("查询指定节点已众筹金额时出错 ：" + error);
                    return error;
                }
            }

            //---查询当前默认节点地址自己的参与众筹金额：
            function getCurGift(){
                try {
                    cc.getGiftBalance(function(error, result){
                        if(!error)
                    {
                        //alert(result); 
                        var fln=result / (10**18);
                        $("#curinfo").html("共参与众筹：" + fln + "ether");
                       //alert(result);
                    }
                    else{
                        //alert(error);
                        $("#curinfo").html('具体参与金额获取出错：' + error);
                    }});
                    $("#curinfo").html('正在获取... ...');

                    //-------------------
                    cc.getgoal(function(error, result){
                        if(!error)
                    {
                        //alert(result); 
                        var fln=result / (10**18);
                        $("#goal").html("目标众筹总量：" + fln + "ether");
                       //alert(result);
                    }
                    else{
                        //alert(error);
                        $("#goal").html('获取目标众筹总量出错：' + error);
                    }});
                    $("#goal").html('正在获取... ...');



                } catch (error) {
                    alert("查询当前节点已众筹金额时出错 ：" + error);
                    return error;
                }
            }

            //参与下注，这儿默认为赌大---
            function dodate(intvalue){
                //alert(intvalue);
                try{
                    web3.eth.getTransactionCount(web3.eth.defaultAccount,function(err,res){
                        if(!err){
                            //alert(res);
                            var message = {to:heyueAddress,value:web3.toWei(intvalue,'ether'),'chainId': 3,'gas': 300000,'gasPrice': web3.toWei('40', 'gwei'),'nonce': res};
                            //cc.donate(message,function(err, res){ //使用这行所示方法，交易可以发起，但无法成功完成
                            //使用下一行的方法，执行成功
                            //这儿下注，默认就为赌大---
                            cc.xiazhu.sendTransaction(true,message,function(err, res){
                                var output = "";
                                if (!err) {
                                    output += res;
                                } else {
                                    output = err;
                                }
                                listendonate();
                                document.getElementById('donateback').innerHTML = "返回信息：Transaction response= " + output + "<br />";
                            });
                            return "ok";
                        }else{
                            alert(err);
                        }
                    }); 
                    document.getElementById('donateback').innerHTML = "操作执行中...";
                }catch(err){
                    alert('执行参与下注出错：' + err);
                    document.getElementById('donateback').innerHTML = "执行失败：Transaction response= " + output + "<br />";
                    return err;
                }
            }

            //取回自己的金额----
            function getmygiftback(){
                try {
                    cc.withdraw(function(error, result){
                        if(!error)
                    {
                        
                        $("#getback").html("操作完成。" + result);
                       //alert(result);
                    }
                    else{
                        //alert(error);
                        $("#getback").html('操作失败：' + error);
                    }});
                    //return "ok"
                    $("#getback").html('正在操作。。。');
                } catch (error) {
                    alert("尝试取回自己的参与众筹金额的份额时出错 ：" + error)
                }
            }

            //发起众筹节点取走成功众筹的总金额
            function getdraw(){
                try {
                    cc.draw(function(error, result){
                        if(!error)
                    {
                        
                        $("#getdoback").html("操作完成。" + result);
                       //alert(result);
                    }
                    else{
                        //alert(error);
                        $("#getdoback").html('操作失败：' + error);
                    }});
                    //return "ok"
                    $("#getdoback").html('正在操作。。。');
                } catch (error) {
                    alert("尝试取走众筹款项时出错 ;" + error)
                }
            }

            //监听当前 次的众筹事件
            function listendonate(){
                try {
                    document.getElementById('donateback').innerText="事件结果监听中......";
                    //------------------------------------------
                    var event=cc.FundTransfer();
                    event.watch(function(error,result){
                        if(!error){
                            var strls="";
                            var strls2="";
                            for(let key in result){
                               strls=strls + key + " : " + result[key] + "; ";
                            }
                            //https://me.tryblockchain.org/blockchain-solidity-event.html
                            try {
                                var fl=0.0;
                                try {
                                    fl=(result.args.amount - 0) / (10 ** 18);
                                } catch (error) {
                                    fl=0.0
                                }
                                var strls3=result.args.amount + "wei";
                                if(fl!=0.0){
                                    strls3=fl.toString + "ether"
                                }
                                strls2="参与众筹金额：" + strls3 + ",得到的代币CI金额" + result.args.backci + "ci.";
                            } catch (error) {
                                strls2="具体事件参数信息未能获取到：" + error;
                            }

                            document.getElementById('donateback').innerHTML=strls + "<br />" + strls2;
                        }else{
                           document.getElementById('donateback').innerText=error;
                        }
                    })

                    /*
                        下面是接收到的返回事件监控信息：
                        address : 0x7a2559f23e056f39e844a465600eb605c4e3aeabblockHash : 0xfab4a6bc95c9aa41fc688e89a87023b124fd581c6bd680226ab08b3d883002ebblockNumber : 6459690logIndex : 1removed : falsetransactionHash : 0xdcd4b44f01fce402ac56ec22be5d6ba479195a48db3ea8082382b4cea81af856transactionIndex : 0event : FundTransferargs : [object Object]
undefined,1000000000000000,100,100000000000000000000,100,100000 

                    */

                    //上面的写法成功，但只能监听当前 一次事件

                    /*
                        注意参照以下代码：
                        instructorEvent.watch(function(error, result) {
                            if (!error)
                                {
                                    $("#info").html(result.args.name + ' (' + result.args.age + ' years old)');
                                } else {
                                    console.log(error);
                                }
                        });
                    */

                    //下面这种写法报错
                    //var myEvent = cc.events.FundTransfer({
                    //    filter: {myIndexedParam: [20,23], myOtherIndexedParam: '0x123456789...'}, // Using an array means OR: e.g. 20 or 23
                    //                fromBlock: 0
                    //                },
                    //    fromBlock: 0
                    //}, function(error, event){})
                    //.on('data', function(event){
                    //    document.getElementById("listenback").innerText=event; // same results as the optional callback above
                    //})
                    //.on('changed', function(event){
                    //        // remove event from local database
                    //})        
                    //.on('error', console.error);

                    
                } catch (error) {
                    document.getElementById('donateback').innerText="监听事件错误：" + error;
                }
            }

            //取回合约地址上多余的ci代币
            function getciback(){
                try {
                    cc.getbackci(function(error, result){
                        if(!error)
                    {
                        
                        $("#getciback").html("操作完成。" + result);
                       //alert(result);
                    }
                    else{
                        //alert(error);
                        $("#getciback").html('操作失败：' + error);
                    }});
                    //return "ok"
                    $("#getciback").html('正在操作。。。');
                } catch (error) {
                    document.getElementById('getciback').innerText="尝试取回合约地址上剩余的ci代币时失败：" + error;
                }
            }

            //取回包括历史事件记录在内的所有记录，当前 函数取回参与众筹的广播事件
            function listenevent(){
                try {
                    //执行下面的语句时，会把getPastEvents当作合约中的函数处理，
                    //但由于合约中根本没有这个函数，所以会报错，
                    //http://cw.hubwiz.com/card/c/web3.js-1.0/1/4/15/
                    var event=cc.FundTransfer();
                    event.watch({filter:{
                        //filter: {myIndexedParam: [20,23], myOtherIndexedParam: '0x123456789...'}, // Using an array means OR: e.g. 20 or 23
                        fromBlock: 0,
                        toBlock: 'latest'
                    }}, function(error, events){
                        document.getElementById("listenback").innerText=events;
                    })
                    //.then(function(events){
                    //    document.getElementById("listenback").innerText=events;// same results as the optional callback above
                    //});

                } catch (error) {
                    document.getElementById("listenback").innerText="监听失败：" + error;
                }
            }

            //--------------------------调用测试---------------------------------------
            //--查询total包含押大的和押小的，接收两个返回值
            function cmdone_click(){
                try{
                    gettotal();
                }catch(err){
                    alert(err);
                }
            }

            //--查询total2
            function cmdone2_click(){
                try{
                    gettotal2();
                }catch(err){
                    alert(err);
                }
            }
    
            //--查询最后一次开奖记录----
            function cmdtwo_click(){
                try{
                    getEndTimeStamp();
                }catch(err){
                    alert(err);
                }
            }

            //--查询我自己（当前节点）的下注情况---
            function cmdthree_click(){
                try{
                    myXiaZhuValue();
                }catch(err){
                    alert(err);
                }
            }

            //--查询已参与节点总数--
            function cmdfoure_click(){
                try{
                    getAddressCount();
                }catch(err){
                    alert(err);
                }
            }

            //--查询指定节点的参与总金额---
            function cmdfive_click(){
                try{
                    var v=document.getElementById("txtaddress").value;
                    if(v.length<=0){
                        alert("请先输入要查询的节点地址");
                    }else{
                        getAddressGift(v);
                    }
                    
                }catch(err){
                    alert(err);
                }
            }

            //--查询所有节点与金额对照字典
            function cmdsix_click(){
                try {
                    getallgiftandvalue();
                } catch (error) {
                    alert(error);
                }
            }

            //--下注-------------
            function cmddonate_click(){
                try{
                    var strls=document.getElementById("txtvalue").value;
                    //alert(strls);
                    if(/^[0-9]+\.?[0-9]+?$/.test(strls)){
                        var fls=parseFloat(strls);
                        //var intls=fls * (10**18);
                        //alert(fls);
                        k=dodate(fls);
                    }else{
                        alert('只能输入数字');
                    }
                }catch(err){
                    alert("操作失败：" + err);
                }
            }

            //---参与众筹都取回自己的参与金额---
            function cmdgetback_click(){
                try {
                    getmygiftback();
                } catch (error) {
                    alert("操作失败：" + error);
                }
            }

            //众筹发起者取走成功众筹的金额
            function cmddo_click(){
                try {
                    getdraw();
                } catch (error) {
                    alert("操作失败：" + error)   
                }
            }

            //监听众筹事件
            function cmdlisten_click(){
                try {
                    document.getElementById("listenback").innerText="开始监听";
                    listenevent();
                } catch (error) {
                    alert("操作失败：" + error);
                }
            }

            //由部署合约的节点去取回合约中剩余的CI代币
            function cmdgetciback_click(){
                try {
                    getciback();
                } catch (error) {
                    alert("操作失败：" + error)
                }
            }

    
        </script>
        
</head>
<body>
    <div>
        <p>
            BoCai合约地址：
        </p>
        <p id="contractaddress" name="contractaddress">

        </p>
        <p id="goal" name="goal">

        </p>

        <p id="firstinfo" name="firstinfo">

        </p>

        <p id="accountsinfo" name="accountsinfo">

        </p>
        <p id="curinfo" name="curinfo">

        </p>
    
    </div>
    <div>
        <input type="button" value="查询当前押大和押小的金额" id="cmdone" name="cmdone" onclick="cmdone_click();" />
        <span id="total" name="total"></span>
        <br /><br />
        <input type="button" value="查询当前合约地址拥有的eth总金额" id="cmdone2" name="cmdone2" onclick="cmdone2_click();" />
        <span id="total2" name="total2"></span>
        <br /><br />
        <input type="button" value="查询最后一次开奖记录" id="cmdtwo" name="cmdtwo" onclick="cmdtwo_click();" />
        <span id="endtime" name="endtime"></span>
        <br /><br />
        <input type="button" value="查询我的下注情况" id="cmdthree" name="cmdthree" onclick="cmdthree_click();" />
        <span id="alladdress" name="alladdress"></span>
        <br /><br />
        <input type="button" value="查询所有已参与节点和金额" id="cmdsix" name="cmdsix" onclick="" />
        <span id="alladdressandvalue" name="alladdressandvalue"></span>
        <br /><br />
        <input type="button" value="查询此参与节点总数" id="cmdfoure" name="cmdfoure" onclick=";" />
        <span id="addresscount" name="addresscount"></span>
        <br /><br />
        <input type="button" value="查询指定节点参与金额" id="cmdfive" name="cmdfive" onclick="" />
        <br />
        <input type="text" value="" id="txtaddress" name="txtaddress" style="width:200px;" />
        <br />
        <span id="address" name="address"></span>
        <br /><br />
        <input type="button" value="我要下赌注" id="cmddo" name="cmddo" onclick="cmddonate_click();" />
        <input type="text" value="0.001" id="txtvalue" name="txtvalue" />eth
        <br />
        <span id="donateback" name="donateback"></span>
        <br /><br />
        <input type="button" value="开奖" id="cmdgetback" name="cmdgetback" onclick="cmdgetback_click();" />
        <span id="getback" name="getback">在满足条件时才能开奖。</span>
        <br /><br />
        <input type="button" value="取走赢利" id="cmddo" name="cmddo" onclick="cmddo_click();" />
        <span id="getdoback" name="getdoback">只有合约部署节点才能取走平台赢利的款项。</span>
        <br /><br />
 
        <input type="button" value="监听合约的事件" id="cmdlisten" name="cmdlisten" onclick="cmdlisten_click();" />
        <span id="listenback" name="listenback"></span>
        <br /><br />



    </div>
    
</body>
</html>
```
已完成的几个js功能测试成功。




github: https://github.com/lhghroom/Self-learning-blockchain-from-scratch 
原文地址：https://www.941xue.com/content.aspx?id=1557  


【欢迎大家加入[就是要学]社群】
如今，这个世界的变化与科技的发展就像一个机器猛兽，它跑得越来越快，跑得越来越快，在我们身后追赶着我们。
很多人很早就放弃了成长，也就放弃了继续奔跑，多数人保持终身不变的样子，原地不动，成为那猛兽的肚中餐——当然那也不错，在猛兽的逼迫下，机械的重复着自我感觉还良好地稳定工作与生活——而且多半感觉不到这有什么不正常的地方，因为在猛兽肚子里的是大多数人，就好像大多数人都在一个大坑里，也就感觉不出来这是一个大坑了，反而坑外的世界显得有些不大正常。
为什么我们不要做坑里的大多数人？
因为真正的人生，应当有百万种可能 ；因为真正的一生可以有好多辈子组成，每一辈子都可以做自己喜欢的事情；因为真正的人生，应当有无数种可以选择的权利，而不是总觉得自己别无选择。因为我们要成为一九法则中为数不多的那个一；因为我们要成为自己人生的导演而不是被迫成为别人安排的戏目中的演员。
【请注意】
就是要学社群并不会告诉你怎样一夜暴富！也不会告诉你怎样不经努力就实现梦想！
【请注意】
就是要学社群并没有任何可以应付未来一切变化的独门绝技，也没有值得吹嘘的所谓价值连城的成功学方法论！
【请注意】
社群只会互相帮助，让每个人都看清自己在哪儿，自己是怎样的，重新看见心中的梦想，唤醒各自内心中的那个英雄，然后勇往直前，成为自己想要成为的样子！
期待与你并肩奔赴未来！
www.941xue.com 
QQ群：646854445 （【就是要学】终身成长）
 




【同步语音笔记】
https://www.ximalaya.com/keji/19103006/350104427 

【学习过程屏幕录屏】
https://www.bilibili.com/video/BV1qD4y127QQ/ 


